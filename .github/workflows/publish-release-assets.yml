name: Publish Release Assets to Page

on:
  release:
    types: [created]
  workflow_dispatch:  # 也可以手动触发工作流
permissions:
  contents: read  # 需要读取仓库内容的权限
  pages: write   # 需要写入Pages的权限

concurrency:
  group: "pages"
  cancel-in-progress: true  # 如果有正在进行的部署，则取消它并开始新的部署
  
jobs:
  publish-assets:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download Release Assets
      id: download_assets
      run: |
        # 获取最新Release的ID
        RELEASE_ID=$(curl -s https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest | jq -r .id)
        # 下载指定的文件到工作目录
        curl -LJO https://github.com/$GITHUB_REPOSITORY/releases/download/$RELEASE_ID/scene.json
        curl -LJO https://github.com/$GITHUB_REPOSITORY/releases/download/$RELEASE_ID/zh.Ys.story.txt

    - name: Commit and Push to GitHub Pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # 假设你已经设置了GitHub Pages，并且源是gh-pages分支
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"
        # 创建或更新一个HTML文件，包含下载链接
        echo "<!DOCTYPE html><html><body><a href='scene.json'>Download scene.json</a><br><a href='zh.Ys.story.txt'>Download zh.Ys.story.txt</a></body></html>" > downloads.html
        git add downloads.html scene.json zh.Ys.story.txt
        git commit -m "Add latest release assets to page [skip ci]"
        git push origin gh-pages
